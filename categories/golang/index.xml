<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on 白日梦想马</title>
    <link>https://blog.luckyanna.cn/categories/golang/</link>
    <description>Recent content in Golang on 白日梦想马</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 19 Jan 2024 11:32:25 +0800</lastBuildDate>
    <atom:link href="https://blog.luckyanna.cn/categories/golang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Golang逃逸分析出现的几种情况</title>
      <link>https://blog.luckyanna.cn/post/2024/1/go_escape_analytic/</link>
      <pubDate>Fri, 19 Jan 2024 11:32:25 +0800</pubDate>
      <guid>https://blog.luckyanna.cn/post/2024/1/go_escape_analytic/</guid>
      <description>在Go语言中，逃逸分析是编译时的一个过程，用来分析变量分配在栈上还是堆上。如果一个变量在函数外部仍然可以访问，那么这个变量就会从栈上“逃逸”</description>
    </item>
    <item>
      <title>Golang垃圾回收</title>
      <link>https://blog.luckyanna.cn/post/2024/1/golang_gc/</link>
      <pubDate>Fri, 19 Jan 2024 09:21:21 +0800</pubDate>
      <guid>https://blog.luckyanna.cn/post/2024/1/golang_gc/</guid>
      <description>Go 的垃圾回收器是基于三色标记清扫算法的，它在运行时进行并发垃圾回收，尽量减少对程序性能的影响。 自 Go 1.5 版本以来，垃圾回收器一直在不断优化。一些</description>
    </item>
    <item>
      <title>flutter ffi golang</title>
      <link>https://blog.luckyanna.cn/post/flutter-ffi-golang/</link>
      <pubDate>Mon, 18 Sep 2023 17:14:59 +0000</pubDate>
      <guid>https://blog.luckyanna.cn/post/flutter-ffi-golang/</guid>
      <description>最近在看一些有趣的flutter项目时，又看到一个Appfolowy的项目，是notion的开源替代版本,主要想解决数据在notion云而不</description>
    </item>
  </channel>
</rss>
